{"version":3,"file":"static/js/815.7458295e.chunk.js","mappings":"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","sources":["api.js","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = process.env.REACT_APP_API_KEY;\n\nexport const fetchDayMovie = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/all/day?api_key=${KEY}`\n    );\n    return response.data;\n  } catch {\n    Promise.reject(new Error('Not Found'));\n  }\n};\n\nexport const fetchMovieByName = async query => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?query=${query}&api_key=${KEY}`\n    );\n    return response.data;\n  } catch {\n    Promise.reject(new Error('Not Found'));\n  }\n};\n\nexport const fetchMovieById = async id => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}?api_key=${KEY}`);\n    return response.data;\n  } catch {\n    Promise.reject(new Error('Not Found'));\n  }\n};\n\nexport const fetchMovieReviews = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}`\n    );\n    return response.data;\n  } catch {\n    Promise.reject(new Error('Not Found'));\n  }\n};\n\nexport const fetchMovieCast = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${KEY}`\n    );\n    return response.data;\n  } catch {\n    Promise.reject(new Error('Not Found'));\n  }\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const AddInfo = styled.h3`\n  margin-bottom: 20px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: block;\n  margin-bottom: 10px;\n  color: ${p => `${p.theme.colors.primary}`};\n  & + & {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const StyledLinkBack = styled(NavLink)`\n  display: inline-block;\n  margin-bottom: 20px;\n  padding: 10px 20px;\n  text-decoration: none;\n  background: ${p => `${p.theme.colors.background}`};\n  color: ${p => `${p.theme.colors.primary}`};\n  border-radius: 8px;\n  border: 1px solid white;\n  transition: 1s, color 1s;\n  &:hover {\n    background: ${p => `${p.theme.colors.primary}`};\n    color: ${p => `${p.theme.colors.background}`};\n  }\n`;\n\nexport const Box = styled.div`\n  margin-bottom: 40px;\n  @media (min-width: 500px) {\n    display: grid;\n    grid-gap: 10px;\n    grid-template-columns: 1fr 2fr;\n  }\n`;\nexport const Img = styled.img`\n  width: 100%;\n`;\n\nexport const MovieInfo = styled.div`\n  margin-left: 20px;\n`;\nexport const MainTitle = styled.h1`\n  margin: 20px 0 10px;\n  text-align: center;\n  font-size: 22px;\n  font-weight: 500;\n  @media (min-width: 500px) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Tagline = styled.p`\n  text-align: center;\n  font-style: italic;\n  margin-bottom: 30px;\n`;\n\nexport const Score = styled.p`\n  margin-bottom: 20px;\n  span {\n    color: ${p => `${p.theme.colors.primary}`};\n  }\n`;\n\nexport const Genres = styled.p`\n  margin-bottom: 5px;\n  color: ${p => `${p.theme.colors.primary}`};\n`;\n\nexport const GenresList = styled.ul`\n  margin-bottom: 20px;\n  color: rgba(171, 171, 171, 1);\n`;\n\nexport const Overview = styled.p`\n  margin-bottom: 10px;\n  color: ${p => `${p.theme.colors.primary}`};\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useLocation, useParams, Outlet } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { fetchMovieById } from '../../api';\nimport defaultImg from '../../default.png';\nimport {\n  Box,\n  StyledLinkBack,\n  StyledLink,\n  MovieInfo,\n  MainTitle,\n  Img,\n  Tagline,\n  Score,\n  Genres,\n  GenresList,\n  Overview,\n  AddInfo\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const movie = await fetchMovieById(movieId);\n        setSelectedMovie(movie);\n      } catch (error) {\n        new Error();\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  if (!selectedMovie) {\n    return;\n  }\n\n  const movieImg = path => {\n    if (path === null) {\n      return `${defaultImg}`;\n    }\n    return `https://image.tmdb.org/t/p/w500/${path}`;\n  };\n\n  const { title, poster_path, vote_average, tagline, overview, genres } =\n    selectedMovie;\n\n  return (\n    <>\n      <StyledLinkBack to={backLinkHref}>Go back</StyledLinkBack>\n      <Box>\n        <div>\n          <Img src={`${movieImg(poster_path)}`} alt=\"title\" />\n        </div>\n\n        <MovieInfo>\n          <MainTitle>{title}</MainTitle>\n          <Tagline>{tagline}</Tagline>\n          <Score>\n            {' '}\n            <span>User Score:</span> {`${vote_average.toFixed(1)}`}\n          </Score>\n          <Genres>Genres</Genres>\n          <GenresList>\n            {genres.map(({ id, name }) => (\n              <li key={id}>- {name}</li>\n            ))}\n          </GenresList>\n          <Overview>Overview</Overview>\n          <p>{overview}</p>\n        </MovieInfo>\n      </Box>\n\n\t\t<AddInfo>Additional information</AddInfo>\n          <StyledLink to='cast' state={{from: backLinkHref}}> Cast </StyledLink>\n          <StyledLink to='reviews' state={{from: backLinkHref}}>Reviews </StyledLink>\n          <Suspense fallback={null}>\n            <Outlet />\n          </Suspense>\n    </>\n  );\n};\n\nMovieDetails.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n\nexport default MovieDetails;"],"names":["BASE_URL","KEY","process","fetchDayMovie","axios","response","data","Promise","reject","Error","fetchMovieByName","query","fetchMovieById","id","fetchMovieReviews","fetchMovieCast","AddInfo","styled","StyledLink","NavLink","p","theme","colors","primary","StyledLinkBack","background","Box","Img","MovieInfo","MainTitle","Tagline","Score","Genres","GenresList","Overview","useState","selectedMovie","setSelectedMovie","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","fetchData","movie","path","title","poster_path","vote_average","tagline","overview","genres","to","src","defaultImg","alt","toFixed","map","name","Suspense","fallback"],"sourceRoot":""}