{"version":3,"file":"static/js/647.b99c3ee2.chunk.js","mappings":"qSAEaA,EAAMC,EAAAA,EAAAA,IAAH,mDAIHC,EAAWD,EAAAA,EAAAA,IAAH,gEAKRE,EAAWF,EAAAA,EAAAA,IAAH,oEAKRG,EAAUH,EAAAA,EAAAA,IAAH,wDAKPI,EAAOJ,EAAAA,EAAAA,GAAH,mEAKJK,EAAOL,EAAAA,EAAAA,EAAH,mD,+CCmEjB,EApFa,WACX,OAAkCM,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,IAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEQC,EAAAA,EAAAA,IAAeJ,GAFvB,OAERK,EAFQ,OAGdN,EAAaM,EAAQC,MAHP,gDAKd,IAAIC,MALU,yDAAH,qDASfJ,GACD,GAAE,CAACH,IAECF,EAAL,CAIA,IAAMU,EAAU,SAAAC,GACd,OAAqB,OAAjBA,EACI,GAAN,OAAUC,GAEN,mCAAN,OAA0CD,EAC3C,EAqCD,OACE,SAACnB,EAAD,UACGQ,EAAUa,OAAS,GAClB,SAAC,KAAD,kBAtCW,CACfC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,aAAc,EACdC,WAAY,CACV,CACEC,WAAY,KACZC,SAAU,CACRL,aAAc,EACdC,eAAgB,EAChBH,UAAU,EACVD,MAAM,IAGV,CACEO,WAAY,IACZC,SAAU,CACRL,aAAc,EACdC,eAAgB,EAChBC,aAAc,IAGlB,CACEE,WAAY,IACZC,SAAU,CACRL,aAAc,EACdC,eAAgB,OASlB,aACGlB,EAAUuB,KAAI,gBAAGC,EAAH,EAAGA,GAAIb,EAAP,EAAOA,aAAcc,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACb,UAAChC,EAAD,YACE,SAACE,EAAD,CAAS+B,IAAG,UAAKjB,EAAQC,IAAiBiB,IAAI,UAC9C,UAACjC,EAAD,YACE,SAACE,EAAD,UAAO4B,KACP,uBAAIC,SAJOF,EADF,QAWjB,SAAC1B,EAAD,mDA3DL,CA+DF,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Box = styled.div`\n  margin: 30px 30px 40px;\n`;\n\nexport const CastItem = styled.div`\n  overflow: hidden;\n  margin: 0 30px;\n`;\n\nexport const NameImfo = styled.div`\n  margin-top: 20px;\n  text-align: center;\n`;\n\nexport const CastImg = styled.img`\n  width: 95%;\n  height: auto;\n`;\n\nexport const Name = styled.h3`\n  font-size: 18px;\n  font-weight: 400px;\n`;\n\nexport const Info = styled.p`\n\tmargin: 0 40px 0 -30px;\n`","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from '../../api';\nimport { Box, CastItem, CastImg, Name, NameImfo, Info } from './Cast.styled';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport defaultImg from '../../default.png';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const reviews = await fetchMovieCast(movieId);\n        setMovieCast(reviews.cast);\n      } catch (error) {\n        new Error();\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  if (!movieCast) {\n    return;\n  }\n\n  const castImg = profile_path => {\n    if (profile_path === null) {\n      return `${defaultImg}`;\n    }\n    return `https://image.tmdb.org/t/p/w500/${profile_path}`;\n  };\n\n  const settings = {\n    dots: true,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 4,\n    slidesToScroll: 4,\n    initialSlide: 0,\n    responsive: [\n      {\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 3,\n          infinite: true,\n          dots: true,\n        },\n      },\n      {\n        breakpoint: 600,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n          initialSlide: 2,\n        },\n      },\n      {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n        },\n      },\n    ],\n  };\n\n  return (\n    <Box>\n      {movieCast.length > 0 ? (\n        <Slider {...settings}>\n          {movieCast.map(({ id, profile_path, name, character }) => (\n            <CastItem key={id}>\n              <CastImg src={`${castImg(profile_path)}`} alt=\"name\" />\n              <NameImfo>\n                <Name>{name}</Name>\n                <p>{character}</p>\n              </NameImfo>\n            </CastItem>\n          ))}\n        </Slider>\n      ) : (\n        <Info>We don't have a cast for this movie</Info>\n      )}\n    </Box>\n  );\n};\n\nexport default Cast;\n"],"names":["Box","styled","CastItem","NameImfo","CastImg","Name","Info","useState","movieCast","setMovieCast","movieId","useParams","useEffect","fetchData","fetchMovieCast","reviews","cast","Error","castImg","profile_path","defaultImg","length","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","responsive","breakpoint","settings","map","id","name","character","src","alt"],"sourceRoot":""}