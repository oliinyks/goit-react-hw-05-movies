{"version":3,"file":"static/js/826.7c6bb47c.chunk.js","mappings":"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","sources":["../node_modules/@emotion/react/dist/emotion-react.browser.esm.js","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","pages/Movies/Movies.styled.jsx","components/SearchFormResult/SearchFormResult.styled.jsx","components/SearchFormResult/SearchFormResult.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import { createElement, useContext, useRef, Fragment } from 'react';\nimport '@emotion/cache';\nimport { h as hasOwnProperty, E as Emotion, c as createEmotionProps, w as withEmotionCache, T as ThemeContext } from './emotion-element-6a883da9.browser.esm.js';\nexport { C as CacheProvider, T as ThemeContext, a as ThemeProvider, _ as __unsafe_useEmotionCache, u as useTheme, w as withEmotionCache, b as withTheme } from './emotion-element-6a883da9.browser.esm.js';\nimport '@babel/runtime/helpers/extends';\nimport '@emotion/weak-memoize';\nimport 'hoist-non-react-statics';\nimport '../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js';\nimport { insertStyles, registerStyles, getRegisteredStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\nimport { useInsertionEffectWithLayoutFallback, useInsertionEffectAlwaysWithSyncFallback } from '@emotion/use-insertion-effect-with-fallbacks';\n\nvar pkg = {\n\tname: \"@emotion/react\",\n\tversion: \"11.10.4\",\n\tmain: \"dist/emotion-react.cjs.js\",\n\tmodule: \"dist/emotion-react.esm.js\",\n\tbrowser: {\n\t\t\"./dist/emotion-react.esm.js\": \"./dist/emotion-react.browser.esm.js\"\n\t},\n\texports: {\n\t\t\".\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./dist/emotion-react.worker.esm.js\",\n\t\t\t\tbrowser: \"./dist/emotion-react.browser.esm.js\",\n\t\t\t\t\"default\": \"./dist/emotion-react.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./dist/emotion-react.cjs.js\"\n\t\t},\n\t\t\"./jsx-runtime\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./jsx-runtime/dist/emotion-react-jsx-runtime.worker.esm.js\",\n\t\t\t\tbrowser: \"./jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\",\n\t\t\t\t\"default\": \"./jsx-runtime/dist/emotion-react-jsx-runtime.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.js\"\n\t\t},\n\t\t\"./_isolated-hnrs\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.worker.esm.js\",\n\t\t\t\tbrowser: \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js\",\n\t\t\t\t\"default\": \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.js\"\n\t\t},\n\t\t\"./jsx-dev-runtime\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.worker.esm.js\",\n\t\t\t\tbrowser: \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.browser.esm.js\",\n\t\t\t\t\"default\": \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.js\"\n\t\t},\n\t\t\"./package.json\": \"./package.json\",\n\t\t\"./types/css-prop\": \"./types/css-prop.d.ts\",\n\t\t\"./macro\": \"./macro.js\"\n\t},\n\ttypes: \"types/index.d.ts\",\n\tfiles: [\n\t\t\"src\",\n\t\t\"dist\",\n\t\t\"jsx-runtime\",\n\t\t\"jsx-dev-runtime\",\n\t\t\"_isolated-hnrs\",\n\t\t\"types/*.d.ts\",\n\t\t\"macro.js\",\n\t\t\"macro.d.ts\",\n\t\t\"macro.js.flow\"\n\t],\n\tsideEffects: false,\n\tauthor: \"Emotion Contributors\",\n\tlicense: \"MIT\",\n\tscripts: {\n\t\t\"test:typescript\": \"dtslint types\"\n\t},\n\tdependencies: {\n\t\t\"@babel/runtime\": \"^7.18.3\",\n\t\t\"@emotion/babel-plugin\": \"^11.10.0\",\n\t\t\"@emotion/cache\": \"^11.10.0\",\n\t\t\"@emotion/serialize\": \"^1.1.0\",\n\t\t\"@emotion/use-insertion-effect-with-fallbacks\": \"^1.0.0\",\n\t\t\"@emotion/utils\": \"^1.2.0\",\n\t\t\"@emotion/weak-memoize\": \"^0.3.0\",\n\t\t\"hoist-non-react-statics\": \"^3.3.1\"\n\t},\n\tpeerDependencies: {\n\t\t\"@babel/core\": \"^7.0.0\",\n\t\treact: \">=16.8.0\"\n\t},\n\tpeerDependenciesMeta: {\n\t\t\"@babel/core\": {\n\t\t\toptional: true\n\t\t},\n\t\t\"@types/react\": {\n\t\t\toptional: true\n\t\t}\n\t},\n\tdevDependencies: {\n\t\t\"@babel/core\": \"^7.18.5\",\n\t\t\"@definitelytyped/dtslint\": \"0.0.112\",\n\t\t\"@emotion/css\": \"11.10.0\",\n\t\t\"@emotion/css-prettifier\": \"1.1.0\",\n\t\t\"@emotion/server\": \"11.10.0\",\n\t\t\"@emotion/styled\": \"11.10.4\",\n\t\t\"html-tag-names\": \"^1.1.2\",\n\t\treact: \"16.14.0\",\n\t\t\"svg-tag-names\": \"^1.1.1\",\n\t\ttypescript: \"^4.5.5\"\n\t},\n\trepository: \"https://github.com/emotion-js/emotion/tree/main/packages/react\",\n\tpublishConfig: {\n\t\taccess: \"public\"\n\t},\n\t\"umd:main\": \"dist/emotion-react.umd.min.js\",\n\tpreconstruct: {\n\t\tentrypoints: [\n\t\t\t\"./index.js\",\n\t\t\t\"./jsx-runtime.js\",\n\t\t\t\"./jsx-dev-runtime.js\",\n\t\t\t\"./_isolated-hnrs.js\"\n\t\t],\n\t\tumdName: \"emotionReact\",\n\t\texports: {\n\t\t\tenvConditions: [\n\t\t\t\t\"browser\",\n\t\t\t\t\"worker\"\n\t\t\t],\n\t\t\textra: {\n\t\t\t\t\"./types/css-prop\": \"./types/css-prop.d.ts\",\n\t\t\t\t\"./macro\": \"./macro.js\"\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar jsx = function jsx(type, props) {\n  var args = arguments;\n\n  if (props == null || !hasOwnProperty.call(props, 'css')) {\n    // $FlowFixMe\n    return createElement.apply(undefined, args);\n  }\n\n  var argsLength = args.length;\n  var createElementArgArray = new Array(argsLength);\n  createElementArgArray[0] = Emotion;\n  createElementArgArray[1] = createEmotionProps(type, props);\n\n  for (var i = 2; i < argsLength; i++) {\n    createElementArgArray[i] = args[i];\n  } // $FlowFixMe\n\n\n  return createElement.apply(null, createElementArgArray);\n};\n\nvar warnedAboutCssPropForGlobal = false; // maintain place over rerenders.\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n// initial client-side render from SSR, use place of hydrating tag\n\nvar Global = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  if (process.env.NODE_ENV !== 'production' && !warnedAboutCssPropForGlobal && ( // check for className as well since the user is\n  // probably using the custom createElement which\n  // means it will be turned into a className prop\n  // $FlowFixMe I don't really want to add it to the type since it shouldn't be used\n  props.className || props.css)) {\n    console.error(\"It looks like you're using the css prop on Global, did you mean to use the styles prop instead?\");\n    warnedAboutCssPropForGlobal = true;\n  }\n\n  var styles = props.styles;\n  var serialized = serializeStyles([styles], undefined, useContext(ThemeContext));\n  // but it is based on a constant that will never change at runtime\n  // it's effectively like having two implementations and switching them out\n  // so it's not actually breaking anything\n\n\n  var sheetRef = useRef();\n  useInsertionEffectWithLayoutFallback(function () {\n    var key = cache.key + \"-global\"; // use case of https://github.com/emotion-js/emotion/issues/2675\n\n    var sheet = new cache.sheet.constructor({\n      key: key,\n      nonce: cache.sheet.nonce,\n      container: cache.sheet.container,\n      speedy: cache.sheet.isSpeedy\n    });\n    var rehydrating = false; // $FlowFixMe\n\n    var node = document.querySelector(\"style[data-emotion=\\\"\" + key + \" \" + serialized.name + \"\\\"]\");\n\n    if (cache.sheet.tags.length) {\n      sheet.before = cache.sheet.tags[0];\n    }\n\n    if (node !== null) {\n      rehydrating = true; // clear the hash so this node won't be recognizable as rehydratable by other <Global/>s\n\n      node.setAttribute('data-emotion', key);\n      sheet.hydrate([node]);\n    }\n\n    sheetRef.current = [sheet, rehydrating];\n    return function () {\n      sheet.flush();\n    };\n  }, [cache]);\n  useInsertionEffectWithLayoutFallback(function () {\n    var sheetRefCurrent = sheetRef.current;\n    var sheet = sheetRefCurrent[0],\n        rehydrating = sheetRefCurrent[1];\n\n    if (rehydrating) {\n      sheetRefCurrent[1] = false;\n      return;\n    }\n\n    if (serialized.next !== undefined) {\n      // insert keyframes\n      insertStyles(cache, serialized.next, true);\n    }\n\n    if (sheet.tags.length) {\n      // if this doesn't exist then it will be null so the style element will be appended\n      var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;\n      sheet.before = element;\n      sheet.flush();\n    }\n\n    cache.insert(\"\", serialized, sheet, false);\n  }, [cache, serialized.name]);\n  return null;\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Global.displayName = 'EmotionGlobal';\n}\n\nfunction css() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return serializeStyles(args);\n}\n\nvar keyframes = function keyframes() {\n  var insertable = css.apply(void 0, arguments);\n  var name = \"animation-\" + insertable.name; // $FlowFixMe\n\n  return {\n    name: name,\n    styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n    anim: 1,\n    toString: function toString() {\n      return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n    }\n  };\n};\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            if (process.env.NODE_ENV !== 'production' && arg.styles !== undefined && arg.name !== undefined) {\n              console.error('You have passed styles created with `css` from `@emotion/react` package to the `cx`.\\n' + '`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from <ClassNames/> component.');\n            }\n\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serializedArr = _ref.serializedArr;\n  var rules = useInsertionEffectAlwaysWithSyncFallback(function () {\n\n    for (var i = 0; i < serializedArr.length; i++) {\n      var res = insertStyles(cache, serializedArr[i], false);\n    }\n  });\n\n  return null;\n};\n\nvar ClassNames = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  var hasRendered = false;\n  var serializedArr = [];\n\n  var css = function css() {\n    if (hasRendered && process.env.NODE_ENV !== 'production') {\n      throw new Error('css can only be used during render');\n    }\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    serializedArr.push(serialized); // registration has to happen here as the result of this might get consumed by `cx`\n\n    registerStyles(cache, serialized, false);\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var cx = function cx() {\n    if (hasRendered && process.env.NODE_ENV !== 'production') {\n      throw new Error('cx can only be used during render');\n    }\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  var content = {\n    css: css,\n    cx: cx,\n    theme: useContext(ThemeContext)\n  };\n  var ele = props.children(content);\n  hasRendered = true;\n  return /*#__PURE__*/createElement(Fragment, null, /*#__PURE__*/createElement(Insertion, {\n    cache: cache,\n    serializedArr: serializedArr\n  }), ele);\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  ClassNames.displayName = 'EmotionClassNames';\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  var isBrowser = \"object\" !== 'undefined'; // #1727 for some reason Jest evaluates modules twice if some consuming module gets mocked with jest.mock\n\n  var isJest = typeof jest !== 'undefined';\n\n  if (isBrowser && !isJest) {\n    // globalThis has wide browser support - https://caniuse.com/?search=globalThis, Node.js 12 and later\n    var globalContext = // $FlowIgnore\n    typeof globalThis !== 'undefined' ? globalThis // eslint-disable-line no-undef\n    : isBrowser ? window : global;\n    var globalKey = \"__EMOTION_REACT_\" + pkg.version.split('.')[0] + \"__\";\n\n    if (globalContext[globalKey]) {\n      console.warn('You are loading @emotion/react when it is already loaded. Running ' + 'multiple instances may cause problems. This can happen if multiple ' + 'versions are used, or if multiple builds of the same version are ' + 'used.');\n    }\n\n    globalContext[globalKey] = true;\n  }\n}\n\nexport { ClassNames, Global, jsx as createElement, css, jsx, keyframes };\n","import styled from '@emotion/styled';\nimport {keyframes } from '@emotion/react'\n\nconst spin = keyframes`\n  to {\n\t transform: rotate(360deg);\n  }\t\n` \n\nexport const Loading = styled.section`\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\t\n`\nexport const Spinner = styled.div`\nposition: relative;\nwidth: 80px;\nheight: 80px;\nborder-radius: 50%;\n\n::before,\n::after {\n  content: '';\n  position: absolute;\n  border-radius: inherit;\n}\n\t\n::before {\n  width: 100%;\n  height: 100%;\n  background-image: linear-gradient(0deg, rgba(156, 138, 92, 1) 0%, rgba(217, 217, 217, 1) 100%);\n  animation: ${spin} 0.5s infinite linear;\n  top: 0%;\n  left: 0%;\n}\n::after {\n  width: 85%;\n  height: 85%;\n  background-color: ${p => `${p.theme.colors.background}`};\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n`\n\n","import React from 'react';\nimport {Loading, Spinner} from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <Loading>\n      <Spinner></Spinner>\n    </Loading>\n  );\n}","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledLink = styled(NavLink)`\n  display: inline-block;\n  margin-bottom: 20px;\n  padding: 10px 20px;\n  text-decoration: none;\n  background: ${p => `${p.theme.colors.background}`};\n  color: ${p => `${p.theme.colors.primary}`};\n  border-radius: 8px;\n  border: 1px solid white;\n  transition: 1s, color 1s;\n  &:hover {\n    background: ${p => `${p.theme.colors.primary}`};\n    color: ${p => `${p.theme.colors.background}`};\n  }\n`;\n\nexport const Box = styled.div`\n  margin-bottom: 40px;\n  @media (min-width: 500px) {\n    display: grid;\n    grid-gap: 10px;\n    grid-template-columns: 1fr 2fr;\n  }\n`;\nexport const Img = styled.img`\n  width: 100%;\n`;\n\nexport const MovieInfo = styled.div`\n  margin-left: 20px;\n`;\nexport const MainTitle = styled.h1`\n  margin: 20px 0 10px;\n  text-align: center;\n  font-size: 22px;\n  font-weight: 500;\n  @media (min-width: 500px) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Tagline = styled.p`\n  text-align: center;\n  font-style: italic;\n  margin-bottom: 30px;\n`;\n\nexport const Score = styled.p`\n  margin-bottom: 20px;\n  span {\n    color: ${p => `${p.theme.colors.primary}`};\n  }\n`;\n\nexport const Genres = styled.p`\n  margin-bottom: 5px;\n  color: ${p => `${p.theme.colors.primary}`};\n`;\n\nexport const GenresList = styled.ul`\n  margin-bottom: 20px;\n  color: rgba(171, 171, 171, 1);\n`;\n\nexport const Overview = styled.p`\n  margin-bottom: 10px;\n  color: ${p => `${p.theme.colors.primary}`};\n`;\n","import { useState, useEffect } from 'react';\nimport { fetchMovieById } from '../../api';\nimport { useLocation, useParams } from 'react-router-dom';\nimport {\n\tBox,\n\tStyledLink,\n\tMovieInfo,\n\tMainTitle,\n\tImg,\n\tTagline,\n\tScore,\n\tGenres,\n\tGenresList,\n\tOverview,\n } from './MovieDetails.styled';\n\n\nexport const MovieDetails = () => {\n\tconst [selectedMovie, setSelectedMovie] = useState(null);\n\tconst { movieId } = useParams();\n\tconst location = useLocation();\n\tconst backLinkHref = location.state?.from ?? \"/movies\";\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t  try {\n\t\t\t const movie = await fetchMovieById(movieId);\n\t\t\t setSelectedMovie(movie);\n\t\t  } catch (error) {\n\t\t\t new Error();\n\t\t  }\n\t\t};\n  \n\t\tfetchData();\n\t }, [movieId]);\n\n\tif (!selectedMovie) {\n\t\treturn;\n\t }\n\n\tconst { title, poster_path, vote_average, tagline, overview, genres } = selectedMovie;\n\t\n\treturn(\n\t\t<>\n\t\t\t\t<StyledLink to={backLinkHref}>Go back</StyledLink>\n\t\t<Box>\n      <div>\n        <Img src={`https://image.tmdb.org/t/p/w500/${poster_path}`} />\n      </div>\n\n      <MovieInfo>\n        <MainTitle>{title}</MainTitle>\n        <Tagline>{tagline}</Tagline>\n        <Score>\n          {' '}\n          <span>User Score:</span> {`${vote_average.toFixed(1)}`}\n        </Score>\n        <Genres>Genres</Genres>\n        <GenresList>\n          {genres.map(({ id, name }) => (\n            <li key={id}>- {name}</li>\n          ))}\n        </GenresList>\n        <Overview>Overview</Overview>\n        <p>{overview}</p>\n      </MovieInfo>\n    </Box>\n\t\t</>\n\t)\n}","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const AddInfo = styled.h3`\n\tmargin-bottom: 20px;\n`\n\nexport const StyledLink = styled(NavLink)`\ndisplay: block;\n  margin-bottom: 10px;\n  color: ${p => `${p.theme.colors.primary}`};\n  & + & {\n\tmargin-bottom: 20px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieTitle = styled.h2`\nfont-size: 18px;\n  text-align: center;\n  color: ${p => `${p.theme.colors.secondary}`};\n  margin-bottom: 10px;\n`;\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n`;\nexport const Items = styled.ul`\n  padding: 0;\n  margin-bottom: 30px;\n\n  display: grid;\n  grid-gap: 10px;\n\n  @media (min-width: 700px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  @media (min-width: 1220px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n`;\n\nexport const Item = styled.li`\n  width: 90%;\n  height: 90%;\n  position: relative;\n  cursor: pointer;\n  overflow: hidden;\n`;\n\nexport const FilmImg = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: 50% 50%;\n  transition: 0.5s ease-in-out;\n  &:hover,\n  &:focus {\n    transform: scale(1.3);\n  }\n`;\n","import defaultImg from '../../default.png';\nimport { useLocation, Outlet } from 'react-router-dom';\nimport {\n  StyledLink,\n  MovieTitle,\n  Items,\n  Item,\n  FilmImg,\n} from './SearchFormResult.styled.jsx';\n\nexport const SearchFormResult = ({ movie }) => {\n  const location = useLocation();\n\n  const posterImg = poster_path => {\n    if (poster_path === null) {\n      return `${defaultImg}`;\n    }\n    return `https://image.tmdb.org/t/p/w500/${poster_path}`;\n  };\n\n  return (\n    <>\n      <Items>\n        {movie.map(({ id, poster_path, title }) => (\n          <Item key={id}>\n            <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n              <MovieTitle>{title}</MovieTitle>\n              <FilmImg src={`${posterImg(poster_path)}`} alt={title} />\n            </StyledLink>\n          </Item>\n        ))}\n        <Outlet />\n      </Items>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledLink = styled(NavLink)`\n  display: inline-block;\n  margin-bottom: 20px;\n  padding: 10px 20px;\n  text-decoration: none;\n  background: ${p => `${p.theme.colors.background}`};\n  color: ${p => `${p.theme.colors.primary}`};\n  border-radius: 8px;\n  border: 1px solid white;\n  transition: 1s, color 1s;\n  &:hover {\n    background: ${p => `${p.theme.colors.primary}`};\n    color: ${p => `${p.theme.colors.background}`};\n  }\n`;\n\nexport const MainTitle = styled.h1`\n  margin-bottom: 30px;\n  text-align: center;\n  font-size: 22px;\n  font-weight: 500;\n  color: ${p => `${p.theme.colors.primary}`};\n`;\n\nexport const Form = styled.form`\nmargin-bottom: 50px;\n\ttext-align: center;\n`\n\nexport const Input = styled.input`\n\tpadding: 15px 10px;\n\twidth: 50%;\n\tborder-radius: 8px;\n\tborder: 1px solid white;\n`\n\nexport const Button = styled.button`\n  display: inline-block;\n  padding: 15px 40px;\n  margin-left: 5px;\n  background: ${p => `${p.theme.colors.background}`};\n  color: ${p => `${p.theme.colors.primary}`};\n  position: relative;\n  border-radius: 8px;\n  border: 1px solid white;\n  transition: 1s, color 1s;\n  &:hover {\n    background: ${p => `${p.theme.colors.primary}`};\n    color: ${p => `${p.theme.colors.background}`};\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { fetchMovieByName } from '../../api';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Loader } from 'components/Loader/Loader';\nimport { SearchFormResult } from '../SearchFormResult/SearchFormResult';\nimport { MainTitle, Button, Form, Input, StyledLink } from './SearchForm.styled';\n\nexport const SearchForm = () => {\n  const [movie, setMovie] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filter = searchParams.get('filter') ?? '';\n\n  useEffect(() => {\n    if (filter.trim() === '') {\n      setMovie([]);\n    }\n  }, [filter]);\n\n  useEffect(() => {\n\tif(filter){\n\t\tfetchMovie()\n\t}\n\t // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[])\n\n  const selectedMovie = e => {\n    const value = e.currentTarget.value;\n    setSearchParams(value !== '' ? { filter: value } : {});\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (filter.trim() === '') {\n      return toast.info('Please select an movie');\n    }\n    setLoader(true);\n    fetchMovie();\n    setLoader(false);\n  };\n\n  const fetchMovie = async() => {\n    try {\n      const reviews = await fetchMovieByName(filter);\n      setMovie(reviews.results);\n      if (!reviews.results.length) {\n        toast.error('We did not find the movie you requested');\n      }\n    } catch (error) {\n      new Error();\n    }\n  };\n\n  return (\n    <>\n\t <StyledLink to=\"/\">Go back</StyledLink>\n\n      <MainTitle>Find a movie</MainTitle>\n\n      <Form onSubmit={handleSubmit}>\n        <Input\n          value={filter}\n          onChange={selectedMovie}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        ></Input>\n        <Button>Search</Button>\n      </Form>\n\n      {movie.length > 0 && <SearchFormResult movie={movie} />}\n      {loader && <Loader />}\n    </>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport {Suspense} from 'react'\nimport { MovieDetails } from '../../components/MovieDetails/MovieDetails';\nimport { useParams } from 'react-router-dom';\nimport {StyledLink, AddInfo} from './Movies.styled'\nimport{SearchForm} from '../../components/SearchForm/SearchForm'\n\nconst Movies = () => {\n\tconst { movieId } = useParams();\n  return (\n    <main>\n\t {movieId && movieId.length > 0 ?\n      <>\n\t\t<MovieDetails/>\n\t\t<AddInfo>Additional information</AddInfo>\n      <StyledLink to={\"cast\"}> Cast </StyledLink>\n      <StyledLink to={\"reviews\"}>Reviews </StyledLink>\n     <Suspense fallback={null}>\n\t   <Outlet />\n\t  </Suspense>\n\t\t</>\n\t\t: <SearchForm/>\n\t }\n    </main>\n  );\n};\n\nexport default Movies;"],"names":["css","_len","arguments","length","args","Array","_key","serializeStyles","spin","insertable","apply","name","styles","anim","toString","this","keyframes","Loading","styled","Spinner","p","theme","colors","background","Loader","StyledLink","NavLink","primary","Box","Img","MovieInfo","MainTitle","Tagline","Score","Genres","GenresList","Overview","MovieDetails","useState","selectedMovie","setSelectedMovie","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","fetchData","fetchMovieById","movie","Error","title","poster_path","vote_average","tagline","overview","genres","to","src","toFixed","map","id","AddInfo","MovieTitle","secondary","Items","Item","FilmImg","SearchFormResult","location","posterImg","defaultImg","alt","Form","Input","Button","SearchForm","setMovie","loader","setLoader","useSearchParams","searchParams","setSearchParams","filter","get","trim","fetchMovie","fetchMovieByName","reviews","results","toast","onSubmit","e","preventDefault","value","onChange","currentTarget","type","autoComplete","autoFocus","placeholder","Suspense","fallback"],"sourceRoot":""}